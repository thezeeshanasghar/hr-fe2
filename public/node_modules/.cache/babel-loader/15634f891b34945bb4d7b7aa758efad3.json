{"ast":null,"code":"var _jsxFileName = \"E:\\\\employee management system\\\\hr\\\\new theme\\\\Fuse-React-v5.2.1-skeleton\\\\src\\\\@fuse\\\\core\\\\FuseMessage\\\\FuseMessage.js\";\nimport { amber, blue, green } from '@material-ui/core/colors';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { hideMessage } from 'app/store/fuse/messageSlice';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  success: {\n    backgroundColor: green[600],\n    color: '#FFFFFF'\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n    color: theme.palette.getContrastText(theme.palette.error.dark)\n  },\n  info: {\n    backgroundColor: blue[600],\n    color: '#FFFFFF'\n  },\n  warning: {\n    backgroundColor: amber[600],\n    color: '#FFFFFF'\n  }\n}));\nconst variantIcon = {\n  success: 'check_circle',\n  warning: 'warning',\n  error: 'error_outline',\n  info: 'info'\n};\n\nfunction FuseMessage(props) {\n  const dispatch = useDispatch();\n  const state = useSelector(({\n    fuse\n  }) => fuse.message.state);\n  const options = useSelector(({\n    fuse\n  }) => fuse.message.options);\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Snackbar, Object.assign({}, options, {\n    open: state,\n    onClose: () => dispatch(hideMessage()),\n    classes: {\n      root: classes.root\n    },\n    ContentProps: {\n      variant: 'body2',\n      headlineMapping: {\n        body1: 'div',\n        body2: 'div'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(SnackbarContent, {\n    className: clsx(classes[options.variant]),\n    message: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }\n    }, variantIcon[options.variant] && /*#__PURE__*/React.createElement(Icon, {\n      color: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 40\n      }\n    }, variantIcon[options.variant]), /*#__PURE__*/React.createElement(Typography, {\n      className: \"mx-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, options.message)),\n    action: [/*#__PURE__*/React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      onClick: () => dispatch(hideMessage()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, \"close\"))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }\n  }));\n}\n\nexport default React.memo(FuseMessage);","map":{"version":3,"sources":["E:/employee management system/hr/new theme/Fuse-React-v5.2.1-skeleton/src/@fuse/core/FuseMessage/FuseMessage.js"],"names":["amber","blue","green","Icon","IconButton","Snackbar","SnackbarContent","makeStyles","Typography","clsx","React","useDispatch","useSelector","hideMessage","useStyles","theme","root","success","backgroundColor","color","error","palette","dark","getContrastText","info","warning","variantIcon","FuseMessage","props","dispatch","state","fuse","message","options","classes","variant","headlineMapping","body1","body2","memo"],"mappings":"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","sourcesContent":["import { amber, blue, green } from '@material-ui/core/colors';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { hideMessage } from 'app/store/fuse/messageSlice';\n\nconst useStyles = makeStyles(theme => ({\n\troot: {},\n\tsuccess: {\n\t\tbackgroundColor: green[600],\n\t\tcolor: '#FFFFFF'\n\t},\n\terror: {\n\t\tbackgroundColor: theme.palette.error.dark,\n\t\tcolor: theme.palette.getContrastText(theme.palette.error.dark)\n\t},\n\tinfo: {\n\t\tbackgroundColor: blue[600],\n\t\tcolor: '#FFFFFF'\n\t},\n\twarning: {\n\t\tbackgroundColor: amber[600],\n\t\tcolor: '#FFFFFF'\n\t}\n}));\n\nconst variantIcon = {\n\tsuccess: 'check_circle',\n\twarning: 'warning',\n\terror: 'error_outline',\n\tinfo: 'info'\n};\n\nfunction FuseMessage(props) {\n\tconst dispatch = useDispatch();\n\tconst state = useSelector(({ fuse }) => fuse.message.state);\n\tconst options = useSelector(({ fuse }) => fuse.message.options);\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Snackbar\n\t\t\t{...options}\n\t\t\topen={state}\n\t\t\tonClose={() => dispatch(hideMessage())}\n\t\t\tclasses={{\n\t\t\t\troot: classes.root\n\t\t\t}}\n\t\t\tContentProps={{\n\t\t\t\tvariant: 'body2',\n\t\t\t\theadlineMapping: {\n\t\t\t\t\tbody1: 'div',\n\t\t\t\t\tbody2: 'div'\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t<SnackbarContent\n\t\t\t\tclassName={clsx(classes[options.variant])}\n\t\t\t\tmessage={\n\t\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t\t{variantIcon[options.variant] && <Icon color=\"inherit\">{variantIcon[options.variant]}</Icon>}\n\t\t\t\t\t\t<Typography className=\"mx-8\">{options.message}</Typography>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\taction={[\n\t\t\t\t\t<IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={() => dispatch(hideMessage())}>\n\t\t\t\t\t\t<Icon>close</Icon>\n\t\t\t\t\t</IconButton>\n\t\t\t\t]}\n\t\t\t/>\n\t\t</Snackbar>\n\t);\n}\n\nexport default React.memo(FuseMessage);\n"]},"metadata":{},"sourceType":"module"}