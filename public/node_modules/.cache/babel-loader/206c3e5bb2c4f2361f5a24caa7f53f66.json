{"ast":null,"code":"var _jsxFileName = \"E:\\\\employee management system\\\\hr\\\\new theme\\\\Fuse-React-v5.2.1-skeleton\\\\src\\\\app\\\\main\\\\PayElementGlAccount\\\\PayElementGlAccount.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport FusePageSimple from '@fuse/core/FusePageSimple';\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { Icon, Input, MuiThemeProvider } from '@material-ui/core';\nimport SimpleReactValidator from 'simple-react-validator';\nimport axios from \"axios\"; //import toastr from 'toastr';\n\nimport { Lookups } from '../../services/constant/enum';\nimport Grid from '@material-ui/core/Grid';\nimport moment from 'moment';\nimport defaultUrl from \"../../../app/services/constant/constant\";\nimport $ from 'jquery';\nimport DataTable from \"datatables.net\";\nimport * as responsive from \"datatables.net-responsive\";\nimport Messages from '../toaster';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: \"99%\"\n  }\n});\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\n\nfunction TabContainer({\n  children,\n  dir\n}) {\n  return /*#__PURE__*/React.createElement(Typography, {\n    component: \"div\",\n    dir: dir,\n    style: {\n      padding: 8 * 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 3\n    }\n  }, children);\n}\n\nlet id = 0;\n\nfunction createData(PayElement, GlAccount, CostCenterPosting, CostCenter, PostingPerEmployee) {\n  id += 1;\n  return {\n    PayElement,\n    GlAccount,\n    CostCenterPosting,\n    CostCenter,\n    PostingPerEmployee\n  };\n}\n\nconst rows = [createData(\"PayElement\", \"GlAccount\", \"true\", \"CostCenter\", \"PostingPerEmployee\")];\n\nclass PayElementGlAccount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      labelWidth: 0,\n      PayElement: \"\",\n      GLAccount: \"\",\n      CostCenterPosting: \"\",\n      CostCenter: \"\",\n      payElements: [],\n      postperEmployee: \"\",\n      glaccountList: [],\n      PeriodicityList: [],\n      costcenterList: [],\n      payelementglAccountList: [],\n      Id: 0,\n      Action: \"Insert Record\",\n      table: null,\n      StaffCategory: \"\",\n      StaffCategoryList: []\n    };\n\n    this.getCostCenter = () => {\n      axios({\n        method: \"get\",\n        url: defaultUrl + \"CostCenter\",\n        headers: {\n          // 'Authorization': `bearer ${token}`,\n          \"Content-Type\": \"application/json;charset=utf-8\"\n        }\n      }).then(response => {\n        console.log(response);\n        this.setState({\n          costcenterList: response.data.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.getStaffCategory = () => {\n      axios({\n        method: \"get\",\n        url: defaultUrl + \"lookups/\" + Lookups.StaffCategory,\n        headers: {\n          // 'Authorization': `bearer ${token}`,\n          \"Content-Type\": \"application/json;charset=utf-8\"\n        }\n      }).then(response => {\n        console.log(response);\n        this.setState({\n          StaffCategoryList: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.getPeriodicity = () => {\n      axios({\n        method: \"get\",\n        url: defaultUrl + \"lookups/\" + Lookups.periodicity,\n        headers: {\n          // 'Authorization': `bearer ${token}`,\n          \"Content-Type\": \"application/json;charset=utf-8\"\n        }\n      }).then(response => {\n        console.log(response);\n        this.setState({\n          PeriodicityList: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.getPayElement = () => {\n      axios({\n        method: \"get\",\n        url: defaultUrl + \"payelement\",\n        headers: {\n          // 'Authorization': `bearer ${token}`,\n          \"Content-Type\": \"application/json;charset=utf-8\"\n        }\n      }).then(response => {\n        console.log(response);\n        this.setState({\n          payElements: response.data.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.getGlAccount = () => {\n      axios({\n        method: \"get\",\n        url: defaultUrl + \"glaccount\",\n        headers: {\n          // 'Authorization': `bearer ${token}`,\n          \"Content-Type\": \"application/json;charset=utf-8\"\n        }\n      }).then(response => {\n        console.log(response);\n        this.setState({\n          glaccountList: response.data.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.insertUpdatePayElementGLAccount = () => {\n      if (!this.validator.allValid()) {\n        this.validator.showMessages();\n        this.forceUpdate();\n      } else {\n        var method = \"post\";\n        var url = defaultUrl + \"PayElementGLAccount\";\n\n        if (this.state.Action != \"Insert Record\") {\n          method = \"put\";\n          url = defaultUrl + \"PayElementGLAccount/\" + this.state.Id;\n        } // console.log(this.state.company,this.state.employee,this.state.dateFrom,this.state.dateTo);\n\n\n        var obj = {\n          PayElementId: this.state.PayElement,\n          GLAccountId: this.state.GLAccount,\n          CostCenterPosting: this.state.CostCenterPosting,\n          CostCenterId: this.state.CostCenter,\n          PostingPerEmployee: this.state.postperEmployee,\n          FinStaffCategory: this.state.StaffCategory\n        };\n        axios.interceptors.request.use(function (config) {\n          document.getElementById(\"fuse-splash-screen\").style.display = \"block\";\n          return config;\n        }, function (error) {\n          console.log('Error');\n          return Promise.reject(error);\n        });\n        axios({\n          method: method,\n          url: url,\n          data: JSON.stringify(obj),\n          headers: {\n            // 'Authorization': `bearer ${token}`,\n            \"Content-Type\": \"application/json;charset=utf-8\"\n          }\n        }).then(response => {\n          toast.success('Operation successfull');\n          this.getpayelementglAccountList();\n          this.setState({\n            PayElement: \"\",\n            GLAccount: \"\",\n            CostCenterPosting: \"\",\n            CostCenter: \"\",\n            postperEmployee: \"\",\n            Id: 0,\n            Action: 'Insert Record',\n            StaffCategory: \"\"\n          });\n          document.getElementById(\"fuse-splash-screen\").style.display = \"none\";\n          Messages.success();\n        }).catch(error => {\n          console.log(error);\n          toast.error('Operation unsuccessfull');\n          this.setState({\n            PayElement: \"\",\n            GLAccount: \"\",\n            CostCenterPosting: \"\",\n            CostCenter: \"\",\n            postperEmployee: \"\",\n            Id: 0,\n            Action: 'Insert Record',\n            StaffCategory: \"\"\n          });\n          document.getElementById(\"fuse-splash-screen\").style.display = \"none\";\n          Messages.error();\n        });\n      }\n    };\n\n    this.getpayelementglAccountList = () => {\n      localStorage.removeItem(\"ids\");\n\n      if (!$.fn.dataTable.isDataTable('#PayElementGLAccount_Table')) {\n        this.state.table = $('#PayElementGLAccount_Table').DataTable({\n          ajax: defaultUrl + \"PayElementGLAccount\",\n          \"columns\": [{\n            \"data\": \"PayElementId\"\n          }, {\n            \"data\": \"GLAccountId\"\n          }, {\n            \"data\": \"CostCenterPosting\"\n          }, {\n            \"data\": \"CostCenterId\"\n          }, {\n            \"data\": \"PostingPerEmployee\"\n          }, {\n            \"data\": \"Action\",\n            sortable: false,\n            \"render\": function (data, type, full, meta) {\n              return `<input type=\"checkbox\" name=\"radio\"  value=` + full.Id + `\n\t\t\t\t\t\tonclick=\" const checkboxes = document.querySelectorAll('input[name=radio]:checked');\n\t\t\t\t\t\t\t\t\tlet values = [];\n\t\t\t\t\t\t\t\t\tcheckboxes.forEach((checkbox) => {\n\t\t\t\t\t\t\t\t\t\tvalues.push(checkbox.value);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('ids',values);\t\"\n\t\t\t\t\t\t/>`;\n            }\n          }],\n          rowReorder: {\n            selector: 'td:nth-child(2)'\n          },\n          responsive: true,\n          dom: 'Bfrtip',\n          buttons: [],\n          columnDefs: [{\n            \"defaultContent\": \"-\",\n            \"targets\": \"_all\"\n          }]\n        });\n      } else {\n        this.state.table.ajax.reload();\n      }\n    };\n\n    this.getpayelementglAccountListById = () => {\n      let ids = localStorage.getItem(\"ids\");\n\n      if (ids === null || localStorage.getItem(\"ids\").split(\",\").length > 1) {\n        alert(\"kindly Select one record\");\n        return false;\n      }\n\n      document.getElementById(\"fuse-splash-screen\").style.display = \"block\";\n      axios({\n        method: \"get\",\n        url: defaultUrl + \"PayElementGLAccount/\" + ids,\n        headers: {\n          // 'Authorization': `bearer ${token}`,\n          \"Content-Type\": \"application/json;charset=utf-8\"\n        }\n      }).then(response => {\n        this.setState({\n          PayElement: response.data[0].PayElementId,\n          GLAccount: response.data[0].GLAccountId,\n          CostCenterPosting: response.data[0].CostCenterPosting,\n          CostCenter: response.data[0].CostCenterId,\n          postperEmployee: response.data[0].PostingPerEmployee,\n          value: 1,\n          Id: response.data[0].Id,\n          Action: \"Update Record\",\n          StaffCategory: response.data[0].FinStaffCategory\n        });\n        document.getElementById(\"fuse-splash-screen\").style.display = \"none\";\n      }).catch(error => {\n        console.log(error);\n        document.getElementById(\"fuse-splash-screen\").style.display = \"none\";\n      });\n    };\n\n    this.deletegetpayelementglAccountList = () => {\n      var ids = localStorage.getItem(\"ids\");\n\n      if (ids === null) {\n        Messages.warning(\"No Record Selected\");\n        return false;\n      }\n\n      document.getElementById(\"fuse-splash-screen\").style.display = \"block\";\n      axios({\n        method: \"delete\",\n        url: defaultUrl + \"PayElementGLAccount/\" + ids,\n        headers: {\n          // 'Authorization': `bearer ${token}`,\n          \"Content-Type\": \"application/json;charset=utf-8\"\n        }\n      }).then(response => {\n        this.getpayelementglAccountList();\n        document.getElementById(\"fuse-splash-screen\").style.display = \"none\";\n        Messages.success();\n      }).catch(error => {\n        console.log(error);\n        document.getElementById(\"fuse-splash-screen\").style.display = \"none\";\n        Messages.success();\n      });\n    };\n\n    this.handleTabChange = (event, value) => {\n      this.setState({\n        value\n      });\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.validator = new SimpleReactValidator();\n  }\n\n  componentDidMount() {\n    this.getPayElement();\n    this.getGlAccount();\n    this.getPeriodicity();\n    this.getCostCenter();\n    this.getpayelementglAccountList();\n    this.getStaffCategory();\n  }\n\n  render() {\n    const {\n      classes,\n      theme\n    } = this.props;\n    return /*#__PURE__*/React.createElement(FusePageSimple, {\n      classes: {\n        root: classes.layoutRoot\n      },\n      header: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-24\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 28\n        }\n      }, \"Pay-Element/GL-Account\")),\n      contentToolbar: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"px-24\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 29\n        }\n      }, \"Add New Pay-Element/GL-Account\")),\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ToastContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(AppBar, {\n        position: \"static\",\n        color: \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Tabs, {\n        value: this.state.value,\n        onChange: this.handleTabChange,\n        indicatorColor: \"primary\",\n        textColor: \"primary\",\n        variant: \"fullWidth\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(Tab, {\n        label: \"View\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Tab, {\n        label: \"Add New\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 9\n        }\n      }))), /*#__PURE__*/React.createElement(SwipeableViews, {\n        axis: theme.direction === 'rtl' ? 'x-reverse' : 'x',\n        index: this.state.value,\n        onChangeIndex: this.handleChangeIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(TabContainer, {\n        dir: theme.direction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          float: \"left\",\n          \"marginLeft\": \"8px\",\n          \"marginTop\": \"8px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        className: classes.button,\n        onClick: this.getpayelementglAccountListById,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }\n      }, \"Edit\")), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          float: \"left\",\n          \"marginLeft\": \"8px\",\n          \"marginTop\": \"8px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"inherit\",\n        className: classes.button,\n        onClick: this.deletegetpayelementglAccountList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }\n      }, \"Delete\"))), /*#__PURE__*/React.createElement(\"table\", {\n        id: \"PayElementGLAccount_Table\",\n        className: \"nowrap header_custom\",\n        style: {\n          \"width\": \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }\n      }, \"Pay Element\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }\n      }, \"GLAccount\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }\n      }, \"CostCenter Posting\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }\n      }, \"CostCenter\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }\n      }, \"Posting Per Employee\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }\n      }, \"Action\")))))), /*#__PURE__*/React.createElement(TabContainer, {\n        dir: theme.direction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 5,\n        style: {\n          marginRight: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        className: classes.formControl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"PayElement\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }\n      }, \"PayElement\"), /*#__PURE__*/React.createElement(Select, {\n        value: this.state.PayElement,\n        onChange: this.handleChange,\n        inputProps: {\n          name: 'PayElement',\n          id: 'PayElement'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"em\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }\n      }, \"None\")), this.state.payElements.map(row => /*#__PURE__*/React.createElement(MenuItem, {\n        value: row.Id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 14\n        }\n      }, row.Code)))), this.validator.message('PayElement', this.state.PayElement, 'required')), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        className: classes.formControl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"PayElement\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }\n      }, \"GL-Account\"), /*#__PURE__*/React.createElement(Select, {\n        value: this.state.GLAccount,\n        onChange: this.handleChange,\n        inputProps: {\n          name: 'GLAccount',\n          id: 'GLAccount'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"em\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }\n      }, \"None\")), this.state.glaccountList.map(row => /*#__PURE__*/React.createElement(MenuItem, {\n        value: row.Id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 14\n        }\n      }, row.Account)))), this.validator.message('GLAccount', this.state.GLAccount, 'required')), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 5,\n        style: {\n          marginRight: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        className: classes.formControl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"CostCenterPosting\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }\n      }, \"CostCenter Posting\"), /*#__PURE__*/React.createElement(Select, {\n        value: this.state.CostCenterPosting,\n        onChange: this.handleChange,\n        inputProps: {\n          name: 'CostCenterPosting',\n          id: 'CostCenterPosting'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"em\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 13\n        }\n      }, \"None\")), this.state.PeriodicityList.map(row => /*#__PURE__*/React.createElement(MenuItem, {\n        value: row.Id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 14\n        }\n      }, row.Name)))), this.validator.message('CostCenterPosting', this.state.CostCenterPosting, 'required')), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        className: classes.formControl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"PayElement\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }\n      }, \"Cost Center\"), /*#__PURE__*/React.createElement(Select, {\n        value: this.state.CostCenter,\n        onChange: this.handleChange,\n        inputProps: {\n          name: 'CostCenter',\n          id: 'CostCenter'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"em\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }\n      }, \"None\")), this.state.costcenterList.map(row => /*#__PURE__*/React.createElement(MenuItem, {\n        value: row.Id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 14\n        }\n      }, row.Code)))), this.validator.message('CostCenter', this.state.CostCenter, 'required')), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"postperEmployee\",\n        type: \"number\",\n        label: \"Posting Per Employee\",\n        className: classes.textField,\n        value: this.state.postperEmployee,\n        name: \"postperEmployee\",\n        fullWidth: true,\n        onChange: this.handleChange,\n        margin: \"normal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 11\n        }\n      }), this.validator.message('postperEmployee', this.state.postperEmployee, 'required')), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        className: classes.formControl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"PayElement\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }\n      }, \"Staff Category\"), /*#__PURE__*/React.createElement(Select, {\n        value: this.state.StaffCategory,\n        onChange: this.handleChange,\n        inputProps: {\n          name: 'StaffCategory',\n          id: 'StaffCategory'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"em\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 13\n        }\n      }, \"None\")), this.state.StaffCategoryList.map(row => /*#__PURE__*/React.createElement(MenuItem, {\n        value: row.Id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 14\n        }\n      }, row.Name)))), this.validator.message('CostCenter', this.state.CostCenter, 'required'))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          float: \"right\",\n          \"marginRight\": \"8px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        onClick: this.insertUpdatePayElementGLAccount,\n        className: classes.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 11\n        }\n      }, this.state.Action))))))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 4\n      }\n    });\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(PayElementGlAccount);","map":{"version":3,"sources":["E:/employee management system/hr/new theme/Fuse-React-v5.2.1-skeleton/src/app/main/PayElementGlAccount/PayElementGlAccount.js"],"names":["React","Component","withStyles","FusePageSimple","SwipeableViews","AppBar","Tabs","Tab","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","IconButton","DeleteIcon","EditIcon","TextField","Button","MenuItem","FormHelperText","FormControl","Select","InputLabel","Icon","Input","MuiThemeProvider","SimpleReactValidator","axios","Lookups","Grid","moment","defaultUrl","$","DataTable","responsive","Messages","ToastContainer","toast","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","dense","marginTop","menu","width","formControl","margin","minWidth","CustomTableCell","head","backgroundColor","palette","common","black","color","white","body","fontSize","TabContainer","children","dir","padding","id","createData","PayElement","GlAccount","CostCenterPosting","CostCenter","PostingPerEmployee","rows","PayElementGlAccount","constructor","props","state","value","labelWidth","GLAccount","payElements","postperEmployee","glaccountList","PeriodicityList","costcenterList","payelementglAccountList","Id","Action","table","StaffCategory","StaffCategoryList","getCostCenter","method","url","headers","then","response","console","log","setState","data","catch","error","getStaffCategory","getPeriodicity","periodicity","getPayElement","getGlAccount","insertUpdatePayElementGLAccount","validator","allValid","showMessages","forceUpdate","obj","PayElementId","GLAccountId","CostCenterId","FinStaffCategory","interceptors","request","use","config","document","getElementById","style","Promise","reject","JSON","stringify","success","getpayelementglAccountList","localStorage","removeItem","fn","dataTable","isDataTable","ajax","sortable","type","full","meta","rowReorder","selector","dom","buttons","columnDefs","reload","getpayelementglAccountListById","ids","getItem","split","length","alert","deletegetpayelementglAccountList","warning","handleTabChange","event","target","name","handleChange","e","componentDidMount","render","classes","root","layoutRoot","direction","handleChangeIndex","float","button","map","row","Code","message","Account","Name","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FusePageSimple from '@fuse/core/FusePageSimple';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { Icon, Input, MuiThemeProvider} from '@material-ui/core';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport axios from \"axios\";\r\n//import toastr from 'toastr';\r\nimport { Lookups } from '../../services/constant/enum'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport moment from 'moment';\r\nimport defaultUrl from \"../../../app/services/constant/constant\";\r\n\r\nimport $ from 'jquery';\r\nimport DataTable from \"datatables.net\";\r\nimport * as responsive from \"datatables.net-responsive\";\r\nimport Messages from '../toaster';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst styles = theme => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing.unit,\r\n\t\tmarginRight: theme.spacing.unit,\r\n\r\n\t},\r\n\tdense: {\r\n\t\tmarginTop: 16,\r\n\t},\r\n\tmenu: {\r\n\t\twidth: 200,\r\n\t},\r\n\tformControl: {\r\n\t\tmargin: theme.spacing.unit,\r\n\t\tminWidth: \"99%\",\r\n\t}\r\n});\r\n\r\nconst CustomTableCell = withStyles(theme => ({\r\n\thead: {\r\n\t\tbackgroundColor: theme.palette.common.black,\r\n\t\tcolor: theme.palette.common.white,\r\n\t},\r\n\tbody: {\r\n\t\tfontSize: 14,\r\n\t},\r\n}))(TableCell);\r\nfunction TabContainer({ children, dir }) {\r\n\treturn (\r\n\t\t<Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\r\n\t\t\t{children}\r\n\t\t</Typography>\r\n\t);\r\n}\r\nlet id = 0;\r\nfunction createData(PayElement, GlAccount, CostCenterPosting, CostCenter, PostingPerEmployee) {\r\n\tid += 1;\r\n\treturn { PayElement, GlAccount, CostCenterPosting, CostCenter, PostingPerEmployee };\r\n}\r\n\r\nconst rows = [\r\n\tcreateData(\"PayElement\", \"GlAccount\", \"true\", \"CostCenter\", \"PostingPerEmployee\")\r\n];\r\n\r\nclass PayElementGlAccount extends Component {\r\n\tstate = {\r\n\t\tvalue: 0,\r\n\t\tlabelWidth: 0,\r\n\t\tPayElement:\"\",\r\n\t\tGLAccount: \"\",\r\n\t\tCostCenterPosting: \"\",\r\n\t\tCostCenter: \"\",\r\n\t\tpayElements:[],\r\n\t\tpostperEmployee:\"\",\r\n\t\tglaccountList:[],\r\n\t\tPeriodicityList:[],\r\n\t\tcostcenterList:[],\r\n\t\tpayelementglAccountList:[],\r\n\t\tId:0,\r\n\t\tAction:\"Insert Record\",\r\n\t\ttable:null,\r\n\t\tStaffCategory:\"\",\r\n\t\tStaffCategoryList:[]\r\n\r\n\t};\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.validator = new SimpleReactValidator();\r\n\r\n\t}\r\n\tcomponentDidMount() {\r\n\tthis.getPayElement();\r\n\tthis.getGlAccount();\r\n\tthis.getPeriodicity();\r\n\tthis.getCostCenter();\r\n\tthis.getpayelementglAccountList();\r\n\tthis.getStaffCategory();\r\n\t}\r\n\tgetCostCenter = () => {\r\n\t\taxios({\r\n\t\t\tmethod: \"get\",\r\n\t\t\turl: defaultUrl+\"CostCenter\",\r\n\t\t\theaders: {\r\n\t\t\t\t// 'Authorization': `bearer ${token}`,\r\n\t\t\t\t\"Content-Type\": \"application/json;charset=utf-8\",\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t\tthis.setState({ costcenterList: response.data.data });\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t}\r\n\tgetStaffCategory=()=>{\r\n\t\taxios({\r\n\t\t\tmethod: \"get\",\r\n\t\t\turl: defaultUrl + \"lookups/\"+Lookups.StaffCategory,\r\n\t\t\theaders: {\r\n\t\t\t\t// 'Authorization': `bearer ${token}`,\r\n\t\t\t\t\"Content-Type\": \"application/json;charset=utf-8\",\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t\tthis.setState({ StaffCategoryList: response.data });\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t}\r\n\tgetPeriodicity=()=>{\r\n\t\taxios({\r\n\t\t\tmethod: \"get\",\r\n\t\t\turl: defaultUrl + \"lookups/\"+Lookups.periodicity,\r\n\t\t\theaders: {\r\n\t\t\t\t// 'Authorization': `bearer ${token}`,\r\n\t\t\t\t\"Content-Type\": \"application/json;charset=utf-8\",\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t\tthis.setState({ PeriodicityList: response.data });\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t}\r\n\r\n\tgetPayElement = () => {\r\n\t\taxios({\r\n\t\t\tmethod: \"get\",\r\n\t\t\turl: defaultUrl+\"payelement\",\r\n\t\t\theaders: {\r\n\t\t\t\t// 'Authorization': `bearer ${token}`,\r\n\t\t\t\t\"Content-Type\": \"application/json;charset=utf-8\",\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t\tthis.setState({ payElements: response.data.data });\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t}\r\n\tgetGlAccount = () => {\r\n\t\taxios({\r\n\t\t\tmethod: \"get\",\r\n\t\t\turl: defaultUrl+\"glaccount\",\r\n\t\t\theaders: {\r\n\t\t\t\t// 'Authorization': `bearer ${token}`,\r\n\t\t\t\t\"Content-Type\": \"application/json;charset=utf-8\",\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t\tthis.setState({ glaccountList: response.data.data });\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t}\r\n\tinsertUpdatePayElementGLAccount= () => {\r\n\t\tif (!this.validator.allValid()) {\r\n\t\t\tthis.validator.showMessages();\r\n\t\t\tthis.forceUpdate();\r\n\t\t} else {\r\n\t\t\tvar method = \"post\";\r\n\t\t\tvar url = defaultUrl+\"PayElementGLAccount\";\r\n\t\t\tif(this.state.Action !=\"Insert Record\")\r\n\t\t\t{\r\n\t\t\t\t method = \"put\";\r\n\t\t\t\t url = defaultUrl+\"PayElementGLAccount/\"+this.state.Id;\r\n\t\t\t}\r\n\t\t\t// console.log(this.state.company,this.state.employee,this.state.dateFrom,this.state.dateTo);\r\n\t\t\tvar obj = {\r\n\t\t\t\tPayElementId:this.state.PayElement,\r\n\t\t\t\tGLAccountId:this.state.GLAccount,\r\n\t\t\t\tCostCenterPosting:this.state.CostCenterPosting,\r\n\t\t\t\tCostCenterId:this.state.CostCenter,\r\n\t\t\t\tPostingPerEmployee:this.state.postperEmployee,\r\n\t\t\t\tFinStaffCategory:this.state.StaffCategory\r\n\t\t\t};\r\n\t\t\taxios.interceptors.request.use(function (config) {\r\n\t\t\t\tdocument.getElementById(\"fuse-splash-screen\").style.display=\"block\";\r\n\t\t\t\treturn config;\r\n\t\t\t}, function (error) {\r\n\t\t\t\tconsole.log('Error');\r\n\t\t\t\treturn Promise.reject(error);\r\n\t\t\t});\r\n\t\t\taxios({\r\n\t\t\t\tmethod: method,\r\n\t\t\t\turl: url,\r\n\t\t\t\tdata: JSON.stringify(obj),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t// 'Authorization': `bearer ${token}`,\r\n\t\t\t\t\t\"Content-Type\": \"application/json;charset=utf-8\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\ttoast.success('Operation successfull');\r\n\t\t\t\tthis.getpayelementglAccountList();\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tPayElement:\"\",\r\n\t\t\t\t\t\tGLAccount:\"\",\r\n\t\t\t\t\t\tCostCenterPosting:\"\",\r\n\t\t\t\t\t\tCostCenter:\"\",\r\n\t\t\t\t\t\tpostperEmployee:\"\",\r\n\t\t\t\t\t\tId: 0,\r\n\t\t\t\t\t\tAction:'Insert Record',\r\n\t\t\t\t\t\tStaffCategory:\"\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdocument.getElementById(\"fuse-splash-screen\").style.display=\"none\";\r\n\t\t\t\t\tMessages.success();\r\n\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\ttoast.error('Operation unsuccessfull');\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tPayElement:\"\",\r\n\t\t\t\t\t\tGLAccount:\"\",\r\n\t\t\t\t\t\tCostCenterPosting:\"\",\r\n\t\t\t\t\t\tCostCenter:\"\",\r\n\t\t\t\t\t\tpostperEmployee:\"\",\r\n\t\t\t\t\t\tId: 0,\r\n\t\t\t\t\t\tAction:'Insert Record',\r\n\t\t\t\t\t\tStaffCategory:\"\"\r\n\t\t\t\t\t})\r\n\t\t\t\t\tdocument.getElementById(\"fuse-splash-screen\").style.display=\"none\";\r\n\t\t\t\t\tMessages.error();\r\n\r\n\t\t\t\t})\r\n\r\n\r\n\t\t}\r\n\t}\r\n\tgetpayelementglAccountList = () => {\r\n\t\tlocalStorage.removeItem(\"ids\");\r\n\t\tif (!$.fn.dataTable.isDataTable('#PayElementGLAccount_Table')) {\r\n\t\t\tthis.state.table = $('#PayElementGLAccount_Table').DataTable({\r\n\t\t\t\tajax: defaultUrl + \"PayElementGLAccount\",\r\n\t\t\t\t\"columns\": [\r\n\t\t\t\t\t{ \"data\": \"PayElementId\" },\r\n\t\t\t\t\t{ \"data\": \"GLAccountId\" },\r\n\t\t\t\t\t{ \"data\": \"CostCenterPosting\" },\r\n\t\t\t\t\t{ \"data\": \"CostCenterId\" },\r\n\t\t\t\t\t{ \"data\": \"PostingPerEmployee\" },\r\n\t\t\t\t\t{ \"data\": \"Action\",\r\n\t\t\t\t\tsortable: false,\r\n\t\t\t\t\t\"render\": function ( data, type, full, meta ) {\r\n\t\t\t\t\t   \r\n\t\t\t\t\t\treturn `<input type=\"checkbox\" name=\"radio\"  value=`+full.Id+`\r\n\t\t\t\t\t\tonclick=\" const checkboxes = document.querySelectorAll('input[name=radio]:checked');\r\n\t\t\t\t\t\t\t\t\tlet values = [];\r\n\t\t\t\t\t\t\t\t\tcheckboxes.forEach((checkbox) => {\r\n\t\t\t\t\t\t\t\t\t\tvalues.push(checkbox.value);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('ids',values);\t\"\r\n\t\t\t\t\t\t/>`;\r\n\t\t\t\t\t}\r\n\t\t\t\t }\r\n\t\t\t\t],\r\n\t\t\t\trowReorder: {\r\n\t\t\t\t\tselector: 'td:nth-child(2)'\r\n\t\t\t\t},\r\n\t\t\t\tresponsive: true,\r\n\t\t\t\tdom: 'Bfrtip',\r\n\t\t\t\tbuttons: [\r\n\r\n\t\t\t\t],\r\n\t\t\t\tcolumnDefs: [{\r\n\t\t\t\t\t\"defaultContent\": \"-\",\r\n\t\t\t\t\t\"targets\": \"_all\"\r\n\t\t\t\t  }]\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.state.table.ajax.reload();\r\n\t\t}\r\n\t\r\n\t}\r\n\tgetpayelementglAccountListById = () => {\r\n\t\t\r\n\t\tlet ids = localStorage.getItem(\"ids\")\r\n\t\tif(ids=== null || localStorage.getItem(\"ids\").split(\",\").length>1)\r\n\t\t{\r\n\t\t\talert(\"kindly Select one record\");\r\n\t\t\treturn false;\t\r\n\t\t}\r\n\t\tdocument.getElementById(\"fuse-splash-screen\").style.display=\"block\";\r\n\r\n\t\taxios({\r\n\t\t\tmethod: \"get\",\r\n\t\t\turl: defaultUrl+\"PayElementGLAccount/\" + ids,\r\n\t\t\theaders: {\r\n\t\t\t\t// 'Authorization': `bearer ${token}`,\r\n\t\t\t\t\"Content-Type\": \"application/json;charset=utf-8\",\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\t\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tPayElement:response.data[0].PayElementId,\r\n\t\t\t\t\tGLAccount: response.data[0].GLAccountId,\r\n\t\t\t\t\tCostCenterPosting: response.data[0].CostCenterPosting,\r\n\t\t\t\t\tCostCenter:response.data[0].CostCenterId,\r\n\t\t\t\t\tpostperEmployee:response.data[0].PostingPerEmployee,\r\n\t\t\t\t\tvalue :  1,\r\n\t\t\t\t\tId : response.data[0].Id,\r\n\t\t\t\t\tAction : \"Update Record\",\r\n\t\t\t\t\tStaffCategory : response.data[0].FinStaffCategory\r\n\t\t\t\t});\r\n\t\t\t\tdocument.getElementById(\"fuse-splash-screen\").style.display=\"none\";\r\n\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tdocument.getElementById(\"fuse-splash-screen\").style.display=\"none\";\r\n\r\n\t\t\t})\r\n\t}\r\n\tdeletegetpayelementglAccountList =()=>{\r\n\t\tvar ids=localStorage.getItem(\"ids\");\r\n\t\tif(ids===null)\r\n\t\t{\r\n\t\tMessages.warning(\"No Record Selected\");\r\n\t\treturn false;\r\n\t\t}\r\n\t\tdocument.getElementById(\"fuse-splash-screen\").style.display=\"block\";\r\n\r\n\t\taxios({\r\n\t\t\tmethod: \"delete\",\r\n\t\t\turl: defaultUrl+\"PayElementGLAccount/\"+ids,\r\n\t\t\theaders: {\r\n\t\t\t  // 'Authorization': `bearer ${token}`,\r\n\t\t\t  \"Content-Type\": \"application/json;charset=utf-8\",\r\n\t\t\t},\r\n\t\t  })\r\n\t\t\t.then((response) => {\r\n\t\t\t\t\r\n\t\t\t\tthis.getpayelementglAccountList();\r\n\t\t\t\tdocument.getElementById(\"fuse-splash-screen\").style.display=\"none\";\r\n\t\t\t\tMessages.success();\r\n\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tdocument.getElementById(\"fuse-splash-screen\").style.display=\"none\";\r\n\t\t\t\tMessages.success();\r\n\r\n\t\t\t})\r\n\t  }\r\n\thandleTabChange = (event, value) => {\r\n\t\tthis.setState({ value });\r\n\t\tthis.setState({ [event.target.name]: event.target.value });\r\n\r\n\t};\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value });\r\n\t};\r\n\trender() {\r\n\t\tconst { classes, theme } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<FusePageSimple\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\troot: classes.layoutRoot\r\n\t\t\t\t}}\r\n\t\t\t\theader={\r\n\t\t\t\t\t<div className=\"p-24\"><h4>Pay-Element/GL-Account</h4></div>\r\n\t\t\t\t}\r\n\t\t\t\tcontentToolbar={\r\n\t\t\t\t\t<div className=\"px-24\"><h4>Add New Pay-Element/GL-Account</h4></div>\r\n\t\t\t\t}\r\n\t\t\t\tcontent={\r\n\r\n\t\t\t\t\t<div className={classes.root}>\r\n\t\t\t\t\t\t<div>\r\n        <ToastContainer />\r\n      </div>\r\n\t\t\t\t\t\t<AppBar position=\"static\" color=\"default\">\r\n\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\tvalue={this.state.value}\r\n\t\t\t\t\t\t\t\tonChange={this.handleTabChange}\r\n\t\t\t\t\t\t\t\tindicatorColor=\"primary\"\r\n\t\t\t\t\t\t\t\ttextColor=\"primary\"\r\n\t\t\t\t\t\t\t\tvariant=\"fullWidth\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Tab label=\"View\" />\r\n\t\t\t\t\t\t\t\t<Tab label=\"Add New\" />\r\n\t\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t\t</AppBar>\r\n\t\t\t\t\t\t<SwipeableViews\r\n\t\t\t\t\t\t\taxis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n\t\t\t\t\t\t\tindex={this.state.value}\r\n\t\t\t\t\t\t\tonChangeIndex={this.handleChangeIndex}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<TabContainer dir={theme.direction}>\r\n\t\t\t\t\t\t\t\t<Paper className={classes.root}>\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div style={{ float: \"left\", \"marginLeft\": \"8px\", \"marginTop\": \"8px\" }}>\r\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"primary\" className={classes.button} onClick={this.getpayelementglAccountListById}>\r\n\t\t\t\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div style={{ float: \"left\", \"marginLeft\": \"8px\", \"marginTop\": \"8px\" }}>\r\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"inherit\" className={classes.button} onClick={this.deletegetpayelementglAccountList}>\r\n\t\t\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<table id=\"PayElementGLAccount_Table\" className=\"nowrap header_custom\" style={{ \"width\": \"100%\" }}>\r\n\t\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Pay Element</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th>GLAccount</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th>CostCenter Posting</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th>CostCenter</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Posting Per Employee</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Action</th>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t</thead>\r\n\r\n\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</TabContainer>\r\n\t\t\t\t\t\t\t<TabContainer dir={theme.direction}>\r\n\t\t\t\t\t\t\t\t<form className={classes.container} noValidate autoComplete=\"off\">\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={5} style={{ marginRight: '5px' }}>\r\n\t\t\t\t\t\t\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"PayElement\">PayElement</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.PayElement}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: 'PayElement',\r\n\t\t\t\t\t\t\t\t\t\t\t\tid: 'PayElement',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<em>None</em>\r\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t{this.state.payElements.map(row => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={row.Id}>{row.Code}</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))} \r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t{this.validator.message('PayElement', this.state.PayElement, 'required')}\r\n\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={5}>\r\n\t\t\t\t\t\t\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"PayElement\">GL-Account</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.GLAccount}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: 'GLAccount',\r\n\t\t\t\t\t\t\t\t\t\t\t\tid: 'GLAccount',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<em>None</em>\r\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t{this.state.glaccountList.map(row => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={row.Id}>{row.Account}</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))} \r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t{this.validator.message('GLAccount', this.state.GLAccount, 'required')}\r\n\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={5} style={{ marginRight: '5px' }} >\r\n\t\t\t\t\t\t\t\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"CostCenterPosting\">CostCenter Posting</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.CostCenterPosting}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: 'CostCenterPosting',\r\n\t\t\t\t\t\t\t\t\t\t\t\tid: 'CostCenterPosting',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<em>None</em>\r\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t{this.state.PeriodicityList.map(row => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={row.Id}>{row.Name}</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))} \r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t{this.validator.message('CostCenterPosting', this.state.CostCenterPosting, 'required')}\r\n\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={5}>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"PayElement\">Cost Center</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.CostCenter}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: 'CostCenter',\r\n\t\t\t\t\t\t\t\t\t\t\t\tid: 'CostCenter',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<em>None</em>\r\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t{this.state.costcenterList.map(row => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={row.Id}>{row.Code}</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))} \r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t{this.validator.message('CostCenter', this.state.CostCenter, 'required')}\r\n\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={5}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\tid=\"postperEmployee\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Posting Per Employee\"\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.postperEmployee}\r\n\t\t\t\t\t\t\t\t\t\tname=\"postperEmployee\"\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t  onChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t{this.validator.message('postperEmployee', this.state.postperEmployee, 'required')}\r\n\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={5}>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"PayElement\">Staff Category</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.StaffCategory}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: 'StaffCategory',\r\n\t\t\t\t\t\t\t\t\t\t\t\tid: 'StaffCategory',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<em>None</em>\r\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t{this.state.StaffCategoryList.map(row => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={row.Id}>{row.Name}</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))} \r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t{this.validator.message('CostCenter', this.state.CostCenter, 'required')}\r\n\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={10}>\r\n\t\t\t\t\t\t\t\t\t<div style={{ float: \"right\", \"marginRight\": \"8px\" }}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"secondary\" onClick={this.insertUpdatePayElementGLAccount} className={classes.button}>\r\n\t\t\t\t\t\t\t\t\t\t\t{this.state.Action}\r\n      \t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</TabContainer>\r\n\t\t\t\t\t\t</SwipeableViews>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(PayElementGlAccount);"]},"metadata":{},"sourceType":"module"}