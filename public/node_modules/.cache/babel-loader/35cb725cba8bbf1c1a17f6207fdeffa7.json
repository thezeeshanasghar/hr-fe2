{"ast":null,"code":"import { fuseDark } from '@fuse/colors';\nimport _ from '@lodash';\nimport { lightBlue, red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport qs from 'qs';\n/**\n * SETTINGS DEFAULTS\n */\n\nexport const defaultSettings = {\n  customScrollbars: true,\n  animations: true,\n  direction: 'ltr',\n  theme: {\n    main: 'default',\n    navbar: 'mainThemeDark',\n    toolbar: 'mainThemeLight',\n    footer: 'mainThemeDark'\n  }\n};\nexport function getParsedQuerySettings() {\n  const parsedQueryString = qs.parse(window.location.search, {\n    ignoreQueryPrefix: true\n  });\n\n  if (parsedQueryString && parsedQueryString.defaultSettings) {\n    return JSON.parse(parsedQueryString.defaultSettings);\n  }\n\n  return {}; // Generating route params from settings\n\n  /* const settings = qs.stringify({\n         defaultSettings: JSON.stringify(defaultSettings, {strictNullHandling: true})\n     });\n     console.info(settings); */\n}\n/**\n * THEME DEFAULTS\n */\n\nexport const defaultThemeOptions = {\n  typography: {\n    fontFamily: ['Muli', 'Roboto', '\"Helvetica\"', 'Arial', 'sans-serif'].join(','),\n    fontWeightLight: 300,\n    fontWeightRegular: 400,\n    fontWeightMedium: 600,\n    useNextVariants: true,\n    suppressDeprecationWarnings: true\n  }\n};\nexport const mustHaveThemeOptions = {\n  typography: {\n    htmlFontSize: 10,\n    body1: {\n      fontSize: '1.4rem'\n    },\n    body2: {\n      fontSize: '1.4rem'\n    }\n  }\n};\nexport const defaultThemes = {\n  default: {\n    palette: {\n      type: 'light',\n      primary: fuseDark,\n      secondary: {\n        light: lightBlue[400],\n        main: lightBlue[600],\n        dark: lightBlue[700]\n      },\n      error: red\n    },\n    status: {\n      danger: 'orange'\n    }\n  },\n  defaultDark: {\n    palette: {\n      type: 'dark',\n      primary: fuseDark,\n      secondary: {\n        light: lightBlue[400],\n        main: lightBlue[600],\n        dark: lightBlue[700]\n      },\n      error: red\n    },\n    status: {\n      danger: 'orange'\n    }\n  }\n};\nexport function extendThemeWithMixins(obj) {\n  const theme = createMuiTheme(obj);\n  return {\n    border: (width = 1) => ({\n      borderWidth: width,\n      borderStyle: 'solid',\n      borderColor: theme.palette.divider\n    }),\n    borderLeft: (width = 1) => ({\n      borderLeftWidth: width,\n      borderStyle: 'solid',\n      borderColor: theme.palette.divider\n    }),\n    borderRight: (width = 1) => ({\n      borderRightWidth: width,\n      borderStyle: 'solid',\n      borderColor: theme.palette.divider\n    }),\n    borderTop: (width = 1) => ({\n      borderTopWidth: width,\n      borderStyle: 'solid',\n      borderColor: theme.palette.divider\n    }),\n    borderBottom: (width = 1) => ({\n      borderBottomWidth: width,\n      borderStyle: 'solid',\n      borderColor: theme.palette.divider\n    })\n  };\n}\nexport function mainThemeVariations(theme) {\n  return {\n    mainThemeDark: _.merge({}, theme, {\n      palette: {\n        type: 'dark',\n        background: {\n          paper: '#1E2125',\n          default: '#121212'\n        }\n      }\n    }),\n    mainThemeLight: _.merge({}, theme, {\n      palette: {\n        type: 'light',\n        background: {\n          paper: '#FFFFFF',\n          default: '#F7F7F7'\n        }\n      }\n    })\n  };\n}","map":{"version":3,"sources":["E:/employee management system/hr/new theme/Fuse-React-v5.2.1-skeleton/src/@fuse/default-settings/FuseDefaultSettings.js"],"names":["fuseDark","_","lightBlue","red","createMuiTheme","qs","defaultSettings","customScrollbars","animations","direction","theme","main","navbar","toolbar","footer","getParsedQuerySettings","parsedQueryString","parse","window","location","search","ignoreQueryPrefix","JSON","defaultThemeOptions","typography","fontFamily","join","fontWeightLight","fontWeightRegular","fontWeightMedium","useNextVariants","suppressDeprecationWarnings","mustHaveThemeOptions","htmlFontSize","body1","fontSize","body2","defaultThemes","default","palette","type","primary","secondary","light","dark","error","status","danger","defaultDark","extendThemeWithMixins","obj","border","width","borderWidth","borderStyle","borderColor","divider","borderLeft","borderLeftWidth","borderRight","borderRightWidth","borderTop","borderTopWidth","borderBottom","borderBottomWidth","mainThemeVariations","mainThemeDark","merge","background","paper","mainThemeLight"],"mappings":"AAAA,SAASA,QAAT,QAAyB,cAAzB;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,0BAA/B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,EAAP,MAAe,IAAf;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,eAAe,GAAG;AAC9BC,EAAAA,gBAAgB,EAAE,IADY;AAE9BC,EAAAA,UAAU,EAAE,IAFkB;AAG9BC,EAAAA,SAAS,EAAE,KAHmB;AAI9BC,EAAAA,KAAK,EAAE;AACNC,IAAAA,IAAI,EAAE,SADA;AAENC,IAAAA,MAAM,EAAE,eAFF;AAGNC,IAAAA,OAAO,EAAE,gBAHH;AAINC,IAAAA,MAAM,EAAE;AAJF;AAJuB,CAAxB;AAYP,OAAO,SAASC,sBAAT,GAAkC;AACxC,QAAMC,iBAAiB,GAAGX,EAAE,CAACY,KAAH,CAASC,MAAM,CAACC,QAAP,CAAgBC,MAAzB,EAAiC;AAAEC,IAAAA,iBAAiB,EAAE;AAArB,GAAjC,CAA1B;;AAEA,MAAIL,iBAAiB,IAAIA,iBAAiB,CAACV,eAA3C,EAA4D;AAC3D,WAAOgB,IAAI,CAACL,KAAL,CAAWD,iBAAiB,CAACV,eAA7B,CAAP;AACA;;AACD,SAAO,EAAP,CANwC,CAQxC;;AACA;AACD;AACA;AACA;AACC;AAED;AACA;AACA;;AACA,OAAO,MAAMiB,mBAAmB,GAAG;AAClCC,EAAAA,UAAU,EAAE;AACXC,IAAAA,UAAU,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,aAAnB,EAAkC,OAAlC,EAA2C,YAA3C,EAAyDC,IAAzD,CAA8D,GAA9D,CADD;AAEXC,IAAAA,eAAe,EAAE,GAFN;AAGXC,IAAAA,iBAAiB,EAAE,GAHR;AAIXC,IAAAA,gBAAgB,EAAE,GAJP;AAKXC,IAAAA,eAAe,EAAE,IALN;AAMXC,IAAAA,2BAA2B,EAAE;AANlB;AADsB,CAA5B;AAWP,OAAO,MAAMC,oBAAoB,GAAG;AACnCR,EAAAA,UAAU,EAAE;AACXS,IAAAA,YAAY,EAAE,EADH;AAEXC,IAAAA,KAAK,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAFI;AAKXC,IAAAA,KAAK,EAAE;AACND,MAAAA,QAAQ,EAAE;AADJ;AALI;AADuB,CAA7B;AAYP,OAAO,MAAME,aAAa,GAAG;AAC5BC,EAAAA,OAAO,EAAE;AACRC,IAAAA,OAAO,EAAE;AACRC,MAAAA,IAAI,EAAE,OADE;AAERC,MAAAA,OAAO,EAAEzC,QAFD;AAGR0C,MAAAA,SAAS,EAAE;AACVC,QAAAA,KAAK,EAAEzC,SAAS,CAAC,GAAD,CADN;AAEVS,QAAAA,IAAI,EAAET,SAAS,CAAC,GAAD,CAFL;AAGV0C,QAAAA,IAAI,EAAE1C,SAAS,CAAC,GAAD;AAHL,OAHH;AAQR2C,MAAAA,KAAK,EAAE1C;AARC,KADD;AAWR2C,IAAAA,MAAM,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AAXA,GADmB;AAgB5BC,EAAAA,WAAW,EAAE;AACZT,IAAAA,OAAO,EAAE;AACRC,MAAAA,IAAI,EAAE,MADE;AAERC,MAAAA,OAAO,EAAEzC,QAFD;AAGR0C,MAAAA,SAAS,EAAE;AACVC,QAAAA,KAAK,EAAEzC,SAAS,CAAC,GAAD,CADN;AAEVS,QAAAA,IAAI,EAAET,SAAS,CAAC,GAAD,CAFL;AAGV0C,QAAAA,IAAI,EAAE1C,SAAS,CAAC,GAAD;AAHL,OAHH;AAQR2C,MAAAA,KAAK,EAAE1C;AARC,KADG;AAWZ2C,IAAAA,MAAM,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AAXI;AAhBe,CAAtB;AAiCP,OAAO,SAASE,qBAAT,CAA+BC,GAA/B,EAAoC;AAC1C,QAAMxC,KAAK,GAAGN,cAAc,CAAC8C,GAAD,CAA5B;AACA,SAAO;AACNC,IAAAA,MAAM,EAAE,CAACC,KAAK,GAAG,CAAT,MAAgB;AACvBC,MAAAA,WAAW,EAAED,KADU;AAEvBE,MAAAA,WAAW,EAAE,OAFU;AAGvBC,MAAAA,WAAW,EAAE7C,KAAK,CAAC6B,OAAN,CAAciB;AAHJ,KAAhB,CADF;AAMNC,IAAAA,UAAU,EAAE,CAACL,KAAK,GAAG,CAAT,MAAgB;AAC3BM,MAAAA,eAAe,EAAEN,KADU;AAE3BE,MAAAA,WAAW,EAAE,OAFc;AAG3BC,MAAAA,WAAW,EAAE7C,KAAK,CAAC6B,OAAN,CAAciB;AAHA,KAAhB,CANN;AAWNG,IAAAA,WAAW,EAAE,CAACP,KAAK,GAAG,CAAT,MAAgB;AAC5BQ,MAAAA,gBAAgB,EAAER,KADU;AAE5BE,MAAAA,WAAW,EAAE,OAFe;AAG5BC,MAAAA,WAAW,EAAE7C,KAAK,CAAC6B,OAAN,CAAciB;AAHC,KAAhB,CAXP;AAgBNK,IAAAA,SAAS,EAAE,CAACT,KAAK,GAAG,CAAT,MAAgB;AAC1BU,MAAAA,cAAc,EAAEV,KADU;AAE1BE,MAAAA,WAAW,EAAE,OAFa;AAG1BC,MAAAA,WAAW,EAAE7C,KAAK,CAAC6B,OAAN,CAAciB;AAHD,KAAhB,CAhBL;AAqBNO,IAAAA,YAAY,EAAE,CAACX,KAAK,GAAG,CAAT,MAAgB;AAC7BY,MAAAA,iBAAiB,EAAEZ,KADU;AAE7BE,MAAAA,WAAW,EAAE,OAFgB;AAG7BC,MAAAA,WAAW,EAAE7C,KAAK,CAAC6B,OAAN,CAAciB;AAHE,KAAhB;AArBR,GAAP;AA2BA;AAED,OAAO,SAASS,mBAAT,CAA6BvD,KAA7B,EAAoC;AAC1C,SAAO;AACNwD,IAAAA,aAAa,EAAEjE,CAAC,CAACkE,KAAF,CAAQ,EAAR,EAAYzD,KAAZ,EAAmB;AACjC6B,MAAAA,OAAO,EAAE;AACRC,QAAAA,IAAI,EAAE,MADE;AAER4B,QAAAA,UAAU,EAAE;AACXC,UAAAA,KAAK,EAAE,SADI;AAEX/B,UAAAA,OAAO,EAAE;AAFE;AAFJ;AADwB,KAAnB,CADT;AAUNgC,IAAAA,cAAc,EAAErE,CAAC,CAACkE,KAAF,CAAQ,EAAR,EAAYzD,KAAZ,EAAmB;AAClC6B,MAAAA,OAAO,EAAE;AACRC,QAAAA,IAAI,EAAE,OADE;AAER4B,QAAAA,UAAU,EAAE;AACXC,UAAAA,KAAK,EAAE,SADI;AAEX/B,UAAAA,OAAO,EAAE;AAFE;AAFJ;AADyB,KAAnB;AAVV,GAAP;AAoBA","sourcesContent":["import { fuseDark } from '@fuse/colors';\nimport _ from '@lodash';\nimport { lightBlue, red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport qs from 'qs';\n\n/**\n * SETTINGS DEFAULTS\n */\nexport const defaultSettings = {\n\tcustomScrollbars: true,\n\tanimations: true,\n\tdirection: 'ltr',\n\ttheme: {\n\t\tmain: 'default',\n\t\tnavbar: 'mainThemeDark',\n\t\ttoolbar: 'mainThemeLight',\n\t\tfooter: 'mainThemeDark'\n\t}\n};\n\nexport function getParsedQuerySettings() {\n\tconst parsedQueryString = qs.parse(window.location.search, { ignoreQueryPrefix: true });\n\n\tif (parsedQueryString && parsedQueryString.defaultSettings) {\n\t\treturn JSON.parse(parsedQueryString.defaultSettings);\n\t}\n\treturn {};\n\n\t// Generating route params from settings\n\t/* const settings = qs.stringify({\n        defaultSettings: JSON.stringify(defaultSettings, {strictNullHandling: true})\n    });\n    console.info(settings); */\n}\n\n/**\n * THEME DEFAULTS\n */\nexport const defaultThemeOptions = {\n\ttypography: {\n\t\tfontFamily: ['Muli', 'Roboto', '\"Helvetica\"', 'Arial', 'sans-serif'].join(','),\n\t\tfontWeightLight: 300,\n\t\tfontWeightRegular: 400,\n\t\tfontWeightMedium: 600,\n\t\tuseNextVariants: true,\n\t\tsuppressDeprecationWarnings: true\n\t}\n};\n\nexport const mustHaveThemeOptions = {\n\ttypography: {\n\t\thtmlFontSize: 10,\n\t\tbody1: {\n\t\t\tfontSize: '1.4rem'\n\t\t},\n\t\tbody2: {\n\t\t\tfontSize: '1.4rem'\n\t\t}\n\t}\n};\n\nexport const defaultThemes = {\n\tdefault: {\n\t\tpalette: {\n\t\t\ttype: 'light',\n\t\t\tprimary: fuseDark,\n\t\t\tsecondary: {\n\t\t\t\tlight: lightBlue[400],\n\t\t\t\tmain: lightBlue[600],\n\t\t\t\tdark: lightBlue[700]\n\t\t\t},\n\t\t\terror: red\n\t\t},\n\t\tstatus: {\n\t\t\tdanger: 'orange'\n\t\t}\n\t},\n\tdefaultDark: {\n\t\tpalette: {\n\t\t\ttype: 'dark',\n\t\t\tprimary: fuseDark,\n\t\t\tsecondary: {\n\t\t\t\tlight: lightBlue[400],\n\t\t\t\tmain: lightBlue[600],\n\t\t\t\tdark: lightBlue[700]\n\t\t\t},\n\t\t\terror: red\n\t\t},\n\t\tstatus: {\n\t\t\tdanger: 'orange'\n\t\t}\n\t}\n};\n\nexport function extendThemeWithMixins(obj) {\n\tconst theme = createMuiTheme(obj);\n\treturn {\n\t\tborder: (width = 1) => ({\n\t\t\tborderWidth: width,\n\t\t\tborderStyle: 'solid',\n\t\t\tborderColor: theme.palette.divider\n\t\t}),\n\t\tborderLeft: (width = 1) => ({\n\t\t\tborderLeftWidth: width,\n\t\t\tborderStyle: 'solid',\n\t\t\tborderColor: theme.palette.divider\n\t\t}),\n\t\tborderRight: (width = 1) => ({\n\t\t\tborderRightWidth: width,\n\t\t\tborderStyle: 'solid',\n\t\t\tborderColor: theme.palette.divider\n\t\t}),\n\t\tborderTop: (width = 1) => ({\n\t\t\tborderTopWidth: width,\n\t\t\tborderStyle: 'solid',\n\t\t\tborderColor: theme.palette.divider\n\t\t}),\n\t\tborderBottom: (width = 1) => ({\n\t\t\tborderBottomWidth: width,\n\t\t\tborderStyle: 'solid',\n\t\t\tborderColor: theme.palette.divider\n\t\t})\n\t};\n}\n\nexport function mainThemeVariations(theme) {\n\treturn {\n\t\tmainThemeDark: _.merge({}, theme, {\n\t\t\tpalette: {\n\t\t\t\ttype: 'dark',\n\t\t\t\tbackground: {\n\t\t\t\t\tpaper: '#1E2125',\n\t\t\t\t\tdefault: '#121212'\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\t\tmainThemeLight: _.merge({}, theme, {\n\t\t\tpalette: {\n\t\t\t\ttype: 'light',\n\t\t\t\tbackground: {\n\t\t\t\t\tpaper: '#FFFFFF',\n\t\t\t\t\tdefault: '#F7F7F7'\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}