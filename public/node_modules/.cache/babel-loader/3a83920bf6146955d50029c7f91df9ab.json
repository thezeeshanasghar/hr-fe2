{"ast":null,"code":"var _jsxFileName = \"E:\\\\employee management system\\\\hr\\\\new theme\\\\Fuse-React-v5.2.1-skeleton\\\\src\\\\app\\\\main\\\\EmployeeVarianceReportDetail\\\\EmployeeVarianceReportDetail.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FusePageSimple, DemoContent } from '@fuse';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport Paper from '@material-ui/core/Paper';\nimport SimpleReactValidator from 'simple-react-validator';\nimport defaultUrl from \"../../services/constant/constant\";\nimport $ from 'jquery';\nimport DataTable from \"datatables.net\";\nimport * as responsive from \"datatables.net-responsive\";\nimport axios from \"axios\";\nimport Select1 from 'react-select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport ReactExport from \"react-export-excel\";\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  },\n  formControl: {\n    minWidth: \"99%\"\n  }\n});\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\n\nfunction TabContainer({\n  children,\n  dir\n}) {\n  return /*#__PURE__*/React.createElement(Typography, {\n    component: \"div\",\n    dir: dir,\n    style: {\n      padding: 8 * 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }, children);\n}\n\nclass EmployeeVarianceReportDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      Action: 'Insert Record',\n      table: null,\n      data: [],\n      Month: \"\",\n      Company: \"\",\n      companyList: []\n    };\n\n    this.getselectiveCompanyDetail = () => {\n      axios({\n        method: \"get\",\n        url: defaultUrl + \"company/Selective/data\",\n        headers: {\n          // 'Authorization': `bearer ${token}`,\n          \"Content-Type\": \"application/json;charset=utf-8\"\n        }\n      }).then(response => {\n        console.log(response);\n        this.setState({\n          companyList: response.data\n        });\n        return response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handledropdown = e => {\n      console.log(\"working\", e.value);\n      this.setState({\n        Company: e.value\n      });\n    };\n\n    this.generateReport = () => {\n      if (this.state.Month != \"\" && this.state.Company != \"\") {\n        var obj = {\n          Date: this.state.Month + \"-01\",\n          CompanyId: this.state.Company\n        };\n        axios({\n          method: \"post\",\n          url: defaultUrl + \"report/indevVarriance\",\n          data: JSON.stringify(obj),\n          headers: {\n            // 'Authorization': `bearer ${token}`,\n            \"Content-Type\": \"application/json;charset=utf-8\"\n          }\n        }).then(response => {\n          this.setState({\n            data: response.data\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    };\n\n    this.handleChange = e => {\n      console.log(e.target.value);\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.validator = new SimpleReactValidator();\n  }\n\n  componentDidMount() {\n    this.getselectiveCompanyDetail();\n  }\n\n  render() {\n    const {\n      classes,\n      theme\n    } = this.props;\n    const dataSet1 = [{\n      name: \"Johson\",\n      amount: 30000,\n      sex: 'M',\n      is_married: true\n    }, {\n      name: \"Monika\",\n      amount: 355000,\n      sex: 'F',\n      is_married: false\n    }, {\n      name: \"John\",\n      amount: 250000,\n      sex: 'M',\n      is_married: false\n    }, {\n      name: \"Josef\",\n      amount: 450500,\n      sex: 'M',\n      is_married: true\n    }];\n    const dataSet2 = [{\n      name: \"Johnson\",\n      total: 25,\n      remainig: 16\n    }, {\n      name: \"Josef\",\n      total: 25,\n      remainig: 7\n    }];\n    return /*#__PURE__*/React.createElement(FusePageSimple, {\n      header: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-24\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 28\n        }\n      }, \"Varriance Report\")),\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        style: {\n          marginBottom: '30px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 5,\n        style: {\n          marginRight: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        className: classes.formControl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"Month\",\n        label: \"Report Month\",\n        type: \"month\",\n        fullWidth: true,\n        name: \"Month\",\n        value: this.state.Month,\n        className: classes.textField,\n        onChange: this.handleChange,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 9\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 5,\n        style: {\n          marginTop: \"10px\"\n        },\n        className: this.state.Type == \"Bank\" || this.state.Type == \"Company\" || this.state.Type == \"Exchange\" || this.state.Type == \"CountryLaw\" ? 'd-none' : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        className: classes.formControl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Select1, {\n        name: \"companyId\",\n        options: this.state.companyList,\n        value: this.state.CompanySelected,\n        className: \"basic-multi-select\",\n        classNamePrefix: \"select\",\n        onChange: this.handledropdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 12\n        }\n      }), this.validator.message('companyId', this.state.companyId, 'required'))), /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        style: {\n          marginTop: \"10px\"\n        },\n        className: classes.button,\n        onClick: () => this.generateReport(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 10\n        }\n      }, \"Generate Report\")), /*#__PURE__*/React.createElement(AppBar, {\n        position: \"static\",\n        color: \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Paper, {\n        className: this.state.data.length > 0 ? classes.root : \"d-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"30%\",\n          height: \"100px\",\n          border: \"solid 1px black\",\n          margin: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }\n      }, \"Company-\", this.state.data.length > 0 ? this.state.data[0].company : \"\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }\n      }, \"PayCycle-\", this.state.data.length > 0 ? this.state.data[0].FirstDate + '-' + this.state.data[0].LastDate : \"\")), /*#__PURE__*/React.createElement(Table, {\n        className: classes.table,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(CustomTableCell, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }\n      }, \"Employee Name\"), /*#__PURE__*/React.createElement(CustomTableCell, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }\n      }, \"PayElement Name\"), /*#__PURE__*/React.createElement(CustomTableCell, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }\n      }, \"Current Month\"), /*#__PURE__*/React.createElement(CustomTableCell, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }\n      }, \"Previous Month\"), /*#__PURE__*/React.createElement(CustomTableCell, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }\n      }, \"Varrience\"), /*#__PURE__*/React.createElement(CustomTableCell, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }\n      }, \"%\"))), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }\n      }, this.state.data.map(row => /*#__PURE__*/React.createElement(TableRow, {\n        className: classes.row,\n        key: row.payElement,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CustomTableCell, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 14\n        }\n      }, row.Name), /*#__PURE__*/React.createElement(CustomTableCell, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 14\n        }\n      }, row.GroupName), /*#__PURE__*/React.createElement(CustomTableCell, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 14\n        }\n      }, row.CURRENTMONTH), /*#__PURE__*/React.createElement(CustomTableCell, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 14\n        }\n      }, row.LASTMONTH), /*#__PURE__*/React.createElement(CustomTableCell, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 14\n        }\n      }, row.Varrience), /*#__PURE__*/React.createElement(CustomTableCell, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 14\n        }\n      }, row.CURRENTMONTH == \"0\" && row.LASTMONTH == \"0\" ? \"0\" : row.LASTMONTH == \"0\" ? '100' : row.CURRENTMONTH == \"0\" ? \"-100\" : row.Varrience / row.LASTMONTH * 100))))), /*#__PURE__*/React.createElement(ExcelFile, {\n        element: /*#__PURE__*/React.createElement(\"button\", {\n          style: {\n            color: \"green\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 30\n          }\n        }, \"Download in Excel sheet\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(ExcelSheet, {\n        data: this.state.data,\n        name: \"Varriance-Report\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(ExcelColumn, {\n        label: \"Company\",\n        value: \"company\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ExcelColumn, {\n        label: \"Employee\",\n        value: \"Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ExcelColumn, {\n        label: \"PayCycle\",\n        value: row => row.FirstDate + '-' + row.LastDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ExcelColumn, {\n        label: \"Group Name\",\n        value: \"GroupName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ExcelColumn, {\n        label: \"Current Month\",\n        value: \"CURRENTMONTH\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ExcelColumn, {\n        label: \"Last Month\",\n        value: \"LASTMONTH\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ExcelColumn, {\n        label: \"Varrience\",\n        value: \"Varrience\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ExcelColumn, {\n        label: \"%\",\n        value: row => row.CURRENTMONTH == \"0\" && row.LASTMONTH == \"0\" ? \"0\" : row.LASTMONTH == \"0\" ? '100' : row.CURRENTMONTH == \"0\" ? \"-100\" : row.Varrience / row.LASTMONTH * 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 9\n        }\n      }))))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 4\n      }\n    });\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(EmployeeVarianceReportDetail);","map":{"version":3,"sources":["E:/employee management system/hr/new theme/Fuse-React-v5.2.1-skeleton/src/app/main/EmployeeVarianceReportDetail/EmployeeVarianceReportDetail.js"],"names":["React","Component","withStyles","FusePageSimple","DemoContent","AppBar","Typography","Table","TableCell","Paper","SimpleReactValidator","defaultUrl","$","DataTable","responsive","axios","Select1","MenuItem","Grid","FormControl","InputLabel","Select","TextField","Button","TableBody","TableHead","TableRow","ReactExport","ExcelFile","ExcelSheet","ExcelColumn","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","dense","marginTop","menu","width","formControl","minWidth","CustomTableCell","head","backgroundColor","palette","common","black","color","white","body","fontSize","TabContainer","children","dir","padding","EmployeeVarianceReportDetail","constructor","props","state","value","Action","table","data","Month","Company","companyList","getselectiveCompanyDetail","method","url","headers","then","response","console","log","setState","catch","error","handledropdown","e","generateReport","obj","Date","CompanyId","JSON","stringify","handleChange","target","name","validator","componentDidMount","render","classes","dataSet1","amount","sex","is_married","dataSet2","total","remainig","root","marginBottom","shrink","Type","CompanySelected","message","companyId","button","length","height","border","margin","company","FirstDate","LastDate","map","row","payElement","Name","GroupName","CURRENTMONTH","LASTMONTH","Varrience","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { FusePageSimple, DemoContent } from '@fuse';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport defaultUrl from \"../../services/constant/constant\";\r\nimport $ from 'jquery';\r\nimport DataTable from \"datatables.net\";\r\nimport * as responsive from \"datatables.net-responsive\";\r\nimport axios from \"axios\";\r\nimport Select1 from 'react-select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport ReactExport from \"react-export-excel\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\nconst styles = theme => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing.unit,\r\n\t\tmarginRight: theme.spacing.unit,\r\n\t\t\r\n\t},\r\n\tdense: {\r\n\t\tmarginTop: 16,\r\n\t},\r\n\tmenu: {\r\n\t\twidth: 200,\r\n\t},\r\n\tformControl: {\r\n\t\tminWidth: \"99%\",\r\n\t}\r\n});\r\n\r\nconst CustomTableCell = withStyles(theme => ({\r\n\thead: {\r\n\t\tbackgroundColor: theme.palette.common.black,\r\n\t\tcolor: theme.palette.common.white,\r\n\t},\r\n\tbody: {\r\n\t\tfontSize: 14,\r\n\t},\r\n}))(TableCell);\r\nfunction TabContainer({ children, dir }) {\r\n\treturn (\r\n\t\t<Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\r\n\t\t\t{children}\r\n\t\t</Typography>\r\n\t);\r\n}\r\n\r\n\r\nclass EmployeeVarianceReportDetail extends Component {\r\n\r\n\tstate = {\r\n\t\tvalue: 0,\r\n\t\tAction:'Insert Record',\r\n\t\ttable:null,\r\n\t\tdata: [],\r\n\t\tMonth:\"\",\r\n\t\tCompany:\"\",\r\n\t\tcompanyList:[]\r\n\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.validator = new SimpleReactValidator();\r\n\t\r\n\t  }\r\n\t  componentDidMount(){\r\n\t\tthis.getselectiveCompanyDetail();\r\n\t  }\r\n\t\r\n\tgetselectiveCompanyDetail = () => {\r\n\t\taxios({\r\n\t\t\tmethod: \"get\",\r\n\t\t\turl: defaultUrl + \"company/Selective/data\",\r\n\t\t\theaders: {\r\n\t\t\t\t// 'Authorization': `bearer ${token}`,\r\n\t\t\t\t\"Content-Type\": \"application/json;charset=utf-8\",\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(response);\r\n\r\n\t\t\t\tthis.setState({ companyList: response.data });\r\n\t\t\t\treturn response.data;\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t}\r\n\thandledropdown = (e) => {\r\n\t\tconsole.log(\"working\",e.value)\r\n\t\tthis.setState({Company:e.value})\r\n\t}\r\n\t  generateReport=()=>{\r\n\t\tif(this.state.Month !=\"\" && this.state.Company!=\"\"){\r\n\t\t\tvar obj={\r\n\t\t\t\tDate:this.state.Month+\"-01\",\r\n\t\t\t\tCompanyId:this.state.Company\r\n\t\t  }\r\n\t\taxios({\r\n\t\t\tmethod: \"post\",\r\n\t\t\turl: defaultUrl + \"report/indevVarriance\",\r\n\t\t\tdata:JSON.stringify(obj),\r\n\t\t\theaders: {\r\n\t\t\t\t// 'Authorization': `bearer ${token}`,\r\n\t\t\t\t\"Content-Type\": \"application/json;charset=utf-8\",\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\t\r\n\t\t\t\tthis.setState({data:response.data})\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t\t}  \r\n\t\t\r\n\t  }\r\n\t  handleChange = (e) => {\r\n\t\t  console.log(e.target.value)\r\n\t\tthis.setState({ [e.target.name]: e.target.value});\r\n\t};\r\n\trender() {\r\n\t\tconst { classes, theme } = this.props;\r\n\t\tconst dataSet1 = [\r\n\t\t\t{\r\n\t\t\t\tname: \"Johson\",\r\n\t\t\t\tamount: 30000,\r\n\t\t\t\tsex: 'M',\r\n\t\t\t\tis_married: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"Monika\",\r\n\t\t\t\tamount: 355000,\r\n\t\t\t\tsex: 'F',\r\n\t\t\t\tis_married: false\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"John\",\r\n\t\t\t\tamount: 250000,\r\n\t\t\t\tsex: 'M',\r\n\t\t\t\tis_married: false\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"Josef\",\r\n\t\t\t\tamount: 450500,\r\n\t\t\t\tsex: 'M',\r\n\t\t\t\tis_married: true\r\n\t\t\t}\r\n\t\t];\r\n\t\t\r\n\t\tconst dataSet2 = [\r\n\t\t\t{\r\n\t\t\t\tname: \"Johnson\",\r\n\t\t\t\ttotal: 25,\r\n\t\t\t\tremainig: 16\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"Josef\",\r\n\t\t\t\ttotal: 25,\r\n\t\t\t\tremainig: 7\r\n\t\t\t}\r\n\t\t];\r\n\t\treturn (\r\n\t\t\t<FusePageSimple\r\n\t\t\t\t\r\n\t\t\t\theader={\r\n\t\t\t\t\t<div className=\"p-24\"><h4>Varriance Report</h4></div>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcontent={\r\n\r\n\t\t\t\t\t<div className={classes.root}>\r\n\t\t\t\t\t\t\t\t\t<form className={classes.container} noValidate autoComplete=\"off\" style={{marginBottom:'30px'}}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={5}  style={{marginRight:'5px'}} >\r\n\t\t\t\t\t\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"Month\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Report Month\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"month\"\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"Month\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.Month}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={5} style={{marginTop: \"10px\"}} className={this.state.Type==\"Bank\" || this.state.Type==\"Company\" || this.state.Type==\"Exchange\" || this.state.Type==\"CountryLaw\" ? 'd-none' : ''   } >\r\n\t\t\t\t\t\t\t\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<Select1\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"companyId\"\r\n\t\t\t\t\t\t\t\t\t\t\t\toptions={this.state.companyList}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.CompanySelected}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"basic-multi-select\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassNamePrefix=\"select\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handledropdown}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t{this.validator.message('companyId', this.state.companyId, 'required')}\r\n\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"secondary\" style={{marginTop: \"10px\"}} className={classes.button} onClick={()=>this.generateReport()} >\r\n\t\t\t\t\t\t\t\t\t\t\t\tGenerate Report\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t<AppBar position=\"static\" color=\"default\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</AppBar>\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Paper className={this.state.data.length>0?classes.root:\"d-none\"} > \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div style={{width:\"30%\",height:\"100px\",border:\"solid 1px black\",margin:\"10px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t<p>Company-{this.state.data.length>0?this.state.data[0].company:\"\"}</p>\r\n\t\t\t\t\t\t\t\t\t\t<p>PayCycle-{this.state.data.length>0?this.state.data[0].FirstDate+'-'+this.state.data[0].LastDate:\"\"}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Table className={classes.table}>\r\n\t\t\t\t\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableRow>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CustomTableCell align=\"center\" >Employee Name</CustomTableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CustomTableCell align=\"center\" >PayElement Name</CustomTableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CustomTableCell align=\"center\">Current Month</CustomTableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CustomTableCell align=\"center\">Previous Month</CustomTableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CustomTableCell align=\"center\">Varrience</CustomTableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CustomTableCell align=\"center\">%</CustomTableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t\t\t\t{this.state.data.map(row => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableRow className={classes.row} key={row.payElement}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomTableCell align=\"center\">{row.Name}</CustomTableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomTableCell align=\"center\">{row.GroupName}</CustomTableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomTableCell align=\"center\">{row.CURRENTMONTH}</CustomTableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomTableCell align=\"center\">{row.LASTMONTH}</CustomTableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomTableCell align=\"center\">{row.Varrience}</CustomTableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomTableCell align=\"center\">{row.CURRENTMONTH==\"0\" && row.LASTMONTH==\"0\"?\"0\":row.LASTMONTH==\"0\"?'100':row.CURRENTMONTH==\"0\"?\"-100\": (row.Varrience/row.LASTMONTH)*100}</CustomTableCell>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t\t\t\t<ExcelFile element={<button style={{color:\"green\"}}>Download in Excel sheet</button>}>\r\n\t\t\t\t\t\t\t<ExcelSheet data={this.state.data} name=\"Varriance-Report\">\r\n\t\t\t\t\t\t\t\t<ExcelColumn label=\"Company\" value=\"company\" />\r\n\t\t\t\t\t\t\t\t<ExcelColumn label=\"Employee\" value=\"Name\" />\r\n\t\t\t\t\t\t\t\t<ExcelColumn label=\"PayCycle\" value={(row) => row.FirstDate+'-'+row.LastDate}  />\r\n\t\t\t\t\t\t\t\t<ExcelColumn label=\"Group Name\" value=\"GroupName\" />\r\n\t\t\t\t\t\t\t\t<ExcelColumn label=\"Current Month\" value=\"CURRENTMONTH\" />\r\n\t\t\t\t\t\t\t\t<ExcelColumn label=\"Last Month\" value=\"LASTMONTH\" />\r\n\t\t\t\t\t\t\t\t<ExcelColumn label=\"Varrience\" value=\"Varrience\" />\r\n\t\t\t\t\t\t\t\t<ExcelColumn label=\"%\"\r\n\t\t\t\t\t\t\t\t\tvalue={(row) => row.CURRENTMONTH==\"0\" && row.LASTMONTH==\"0\"?\"0\":row.LASTMONTH==\"0\"?'100':row.CURRENTMONTH==\"0\"?\"-100\": (row.Varrience/row.LASTMONTH)*100} />\r\n\t\t\t\t\t\t\t</ExcelSheet>\r\n\t\t\t\t\t\t</ExcelFile>\r\n\t\t\t\t\t\t\t  </Paper>\r\n\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(EmployeeVarianceReportDetail);"]},"metadata":{},"sourceType":"module"}