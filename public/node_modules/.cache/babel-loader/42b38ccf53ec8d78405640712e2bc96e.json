{"ast":null,"code":"var _jsxFileName = \"E:\\\\employee management system\\\\hr\\\\new theme\\\\Fuse-React-v5.2.1-skeleton\\\\src\\\\app\\\\fuse-layouts\\\\shared-components\\\\FullScreenToggle.js\";\nimport Icon from '@material-ui/core/Icon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport clsx from 'clsx';\nimport React, { useState } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\nconst HeaderFullScreenToggle = props => {\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  useEnhancedEffect(() => {\n    document.onfullscreenchange = () => setIsFullScreen(document[getBrowserFullscreenElementProp()] != null);\n\n    return () => {\n      document.onfullscreenchange = undefined;\n    };\n  });\n\n  function getBrowserFullscreenElementProp() {\n    if (typeof document.fullscreenElement !== 'undefined') {\n      return 'fullscreenElement';\n    }\n\n    if (typeof document.mozFullScreenElement !== 'undefined') {\n      return 'mozFullScreenElement';\n    }\n\n    if (typeof document.msFullscreenElement !== 'undefined') {\n      return 'msFullscreenElement';\n    }\n\n    if (typeof document.webkitFullscreenElement !== 'undefined') {\n      return 'webkitFullscreenElement';\n    }\n\n    throw new Error('fullscreenElement is not supported by this browser');\n  }\n  /* View in fullscreen */\n\n\n  function openFullscreen() {\n    const elem = document.documentElement;\n\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.mozRequestFullScreen) {\n      /* Firefox */\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) {\n      /* Chrome, Safari and Opera */\n      elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      /* IE/Edge */\n      elem.msRequestFullscreen();\n    }\n  }\n  /* Close fullscreen */\n\n\n  function closeFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      /* Firefox */\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      /* Chrome, Safari and Opera */\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      /* IE/Edge */\n      document.msExitFullscreen();\n    }\n  }\n\n  function toggleFullScreen() {\n    if (document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement) {\n      closeFullscreen();\n    } else {\n      openFullscreen();\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Fullscreen toggle\",\n    placement: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleFullScreen,\n    className: clsx('w-40 h-40', props.className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, isFullScreen ? 'fullscreen_exit' : 'fullscreen')));\n};\n\nexport default HeaderFullScreenToggle;","map":{"version":3,"sources":["E:/employee management system/hr/new theme/Fuse-React-v5.2.1-skeleton/src/app/fuse-layouts/shared-components/FullScreenToggle.js"],"names":["Icon","Tooltip","clsx","React","useState","IconButton","useEnhancedEffect","window","useLayoutEffect","useEffect","HeaderFullScreenToggle","props","isFullScreen","setIsFullScreen","document","onfullscreenchange","getBrowserFullscreenElementProp","undefined","fullscreenElement","mozFullScreenElement","msFullscreenElement","webkitFullscreenElement","Error","openFullscreen","elem","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","closeFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","toggleFullScreen","className"],"mappings":"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","sourcesContent":["import Icon from '@material-ui/core/Icon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport clsx from 'clsx';\nimport React, { useState } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\nconst HeaderFullScreenToggle = props => {\n\tconst [isFullScreen, setIsFullScreen] = useState(false);\n\n\tuseEnhancedEffect(() => {\n\t\tdocument.onfullscreenchange = () => setIsFullScreen(document[getBrowserFullscreenElementProp()] != null);\n\n\t\treturn () => {\n\t\t\tdocument.onfullscreenchange = undefined;\n\t\t};\n\t});\n\n\tfunction getBrowserFullscreenElementProp() {\n\t\tif (typeof document.fullscreenElement !== 'undefined') {\n\t\t\treturn 'fullscreenElement';\n\t\t}\n\t\tif (typeof document.mozFullScreenElement !== 'undefined') {\n\t\t\treturn 'mozFullScreenElement';\n\t\t}\n\t\tif (typeof document.msFullscreenElement !== 'undefined') {\n\t\t\treturn 'msFullscreenElement';\n\t\t}\n\t\tif (typeof document.webkitFullscreenElement !== 'undefined') {\n\t\t\treturn 'webkitFullscreenElement';\n\t\t}\n\t\tthrow new Error('fullscreenElement is not supported by this browser');\n\t}\n\n\t/* View in fullscreen */\n\tfunction openFullscreen() {\n\t\tconst elem = document.documentElement;\n\n\t\tif (elem.requestFullscreen) {\n\t\t\telem.requestFullscreen();\n\t\t} else if (elem.mozRequestFullScreen) {\n\t\t\t/* Firefox */\n\t\t\telem.mozRequestFullScreen();\n\t\t} else if (elem.webkitRequestFullscreen) {\n\t\t\t/* Chrome, Safari and Opera */\n\t\t\telem.webkitRequestFullscreen();\n\t\t} else if (elem.msRequestFullscreen) {\n\t\t\t/* IE/Edge */\n\t\t\telem.msRequestFullscreen();\n\t\t}\n\t}\n\n\t/* Close fullscreen */\n\tfunction closeFullscreen() {\n\t\tif (document.exitFullscreen) {\n\t\t\tdocument.exitFullscreen();\n\t\t} else if (document.mozCancelFullScreen) {\n\t\t\t/* Firefox */\n\t\t\tdocument.mozCancelFullScreen();\n\t\t} else if (document.webkitExitFullscreen) {\n\t\t\t/* Chrome, Safari and Opera */\n\t\t\tdocument.webkitExitFullscreen();\n\t\t} else if (document.msExitFullscreen) {\n\t\t\t/* IE/Edge */\n\t\t\tdocument.msExitFullscreen();\n\t\t}\n\t}\n\n\tfunction toggleFullScreen() {\n\t\tif (document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement) {\n\t\t\tcloseFullscreen();\n\t\t} else {\n\t\t\topenFullscreen();\n\t\t}\n\t}\n\n\treturn (\n\t\t<Tooltip title=\"Fullscreen toggle\" placement=\"bottom\">\n\t\t\t<IconButton onClick={toggleFullScreen} className={clsx('w-40 h-40', props.className)}>\n\t\t\t\t<Icon>{isFullScreen ? 'fullscreen_exit' : 'fullscreen'}</Icon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport default HeaderFullScreenToggle;\n"]},"metadata":{},"sourceType":"module"}