{"ast":null,"code":"var _jsxFileName = \"E:\\\\employee management system\\\\hr\\\\new theme\\\\Fuse-React-v5.2.1-skeleton\\\\src\\\\@fuse\\\\core\\\\FuseNavigation\\\\vertical\\\\FuseNavVerticalItem.js\";\nimport NavLinkAdapter from '@fuse/core/NavLinkAdapter';\nimport FuseUtils from '@fuse/utils';\nimport Icon from '@material-ui/core/Icon';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { navbarCloseMobile } from 'app/store/fuse/navbarSlice';\nimport FuseNavBadge from '../FuseNavBadge';\nconst useStyles = makeStyles(theme => ({\n  item: props => ({\n    height: 40,\n    width: 'calc(100% - 16px)',\n    borderRadius: '0 20px 20px 0',\n    paddingRight: 12,\n    paddingLeft: props.itemPadding > 80 ? 80 : props.itemPadding,\n    '&.active': {\n      backgroundColor: `${theme.palette.secondary.main}!important`,\n      color: `${theme.palette.secondary.contrastText}!important`,\n      pointerEvents: 'none',\n      transition: 'border-radius .15s cubic-bezier(0.4,0.0,0.2,1)',\n      '& .list-item-text-primary': {\n        color: 'inherit'\n      },\n      '& .list-item-icon': {\n        color: 'inherit'\n      }\n    },\n    '& .list-item-icon': {\n      marginRight: 16\n    },\n    '& .list-item-text': {},\n    color: theme.palette.text.primary,\n    cursor: 'pointer',\n    textDecoration: 'none!important'\n  })\n}));\n\nfunction FuseNavVerticalItem(props) {\n  const userRole = useSelector(({\n    auth\n  }) => auth.user.role);\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const mdDown = useMediaQuery(theme.breakpoints.down('md'));\n  const {\n    item,\n    nestedLevel\n  } = props;\n  const classes = useStyles({\n    itemPadding: nestedLevel > 0 ? 40 + nestedLevel * 16 : 24\n  });\n  const hasPermission = useMemo(() => FuseUtils.hasPermission(item.auth, userRole), [item.auth, userRole]);\n\n  if (!hasPermission) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    component: NavLinkAdapter,\n    to: item.url,\n    activeClassName: \"active\",\n    className: clsx(classes.item, 'list-item'),\n    onClick: ev => mdDown && dispatch(navbarCloseMobile()),\n    exact: item.exact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }, item.icon && /*#__PURE__*/React.createElement(Icon, {\n    className: \"list-item-icon text-16 flex-shrink-0\",\n    color: \"action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, item.icon), /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"list-item-text\",\n    primary: item.title,\n    classes: {\n      primary: 'text-14 list-item-text-primary'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }\n  }), item.badge && /*#__PURE__*/React.createElement(FuseNavBadge, {\n    badge: item.badge,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }));\n}\n\nFuseNavVerticalItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    icon: PropTypes.string,\n    url: PropTypes.string\n  })\n};\nFuseNavVerticalItem.defaultProps = {};\nconst NavVerticalItem = withRouter(React.memo(FuseNavVerticalItem));\nexport default NavVerticalItem;","map":{"version":3,"sources":["E:/employee management system/hr/new theme/Fuse-React-v5.2.1-skeleton/src/@fuse/core/FuseNavigation/vertical/FuseNavVerticalItem.js"],"names":["NavLinkAdapter","FuseUtils","Icon","ListItem","ListItemText","makeStyles","useTheme","clsx","PropTypes","React","useMemo","useDispatch","useSelector","withRouter","useMediaQuery","navbarCloseMobile","FuseNavBadge","useStyles","theme","item","props","height","width","borderRadius","paddingRight","paddingLeft","itemPadding","backgroundColor","palette","secondary","main","color","contrastText","pointerEvents","transition","marginRight","text","primary","cursor","textDecoration","FuseNavVerticalItem","userRole","auth","user","role","dispatch","mdDown","breakpoints","down","nestedLevel","classes","hasPermission","url","ev","exact","icon","title","badge","propTypes","shape","id","string","isRequired","defaultProps","NavVerticalItem","memo"],"mappings":"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","sourcesContent":["import NavLinkAdapter from '@fuse/core/NavLinkAdapter';\nimport FuseUtils from '@fuse/utils';\nimport Icon from '@material-ui/core/Icon';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { navbarCloseMobile } from 'app/store/fuse/navbarSlice';\nimport FuseNavBadge from '../FuseNavBadge';\n\nconst useStyles = makeStyles(theme => ({\n\titem: props => ({\n\t\theight: 40,\n\t\twidth: 'calc(100% - 16px)',\n\t\tborderRadius: '0 20px 20px 0',\n\t\tpaddingRight: 12,\n\t\tpaddingLeft: props.itemPadding > 80 ? 80 : props.itemPadding,\n\t\t'&.active': {\n\t\t\tbackgroundColor: `${theme.palette.secondary.main}!important`,\n\t\t\tcolor: `${theme.palette.secondary.contrastText}!important`,\n\t\t\tpointerEvents: 'none',\n\t\t\ttransition: 'border-radius .15s cubic-bezier(0.4,0.0,0.2,1)',\n\t\t\t'& .list-item-text-primary': {\n\t\t\t\tcolor: 'inherit'\n\t\t\t},\n\t\t\t'& .list-item-icon': {\n\t\t\t\tcolor: 'inherit'\n\t\t\t}\n\t\t},\n\t\t'& .list-item-icon': {\n\t\t\tmarginRight: 16\n\t\t},\n\t\t'& .list-item-text': {},\n\t\tcolor: theme.palette.text.primary,\n\t\tcursor: 'pointer',\n\t\ttextDecoration: 'none!important'\n\t})\n}));\n\nfunction FuseNavVerticalItem(props) {\n\tconst userRole = useSelector(({ auth }) => auth.user.role);\n\tconst dispatch = useDispatch();\n\n\tconst theme = useTheme();\n\tconst mdDown = useMediaQuery(theme.breakpoints.down('md'));\n\tconst { item, nestedLevel } = props;\n\tconst classes = useStyles({\n\t\titemPadding: nestedLevel > 0 ? 40 + nestedLevel * 16 : 24\n\t});\n\n\tconst hasPermission = useMemo(() => FuseUtils.hasPermission(item.auth, userRole), [item.auth, userRole]);\n\n\tif (!hasPermission) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<ListItem\n\t\t\tbutton\n\t\t\tcomponent={NavLinkAdapter}\n\t\t\tto={item.url}\n\t\t\tactiveClassName=\"active\"\n\t\t\tclassName={clsx(classes.item, 'list-item')}\n\t\t\tonClick={ev => mdDown && dispatch(navbarCloseMobile())}\n\t\t\texact={item.exact}\n\t\t>\n\t\t\t{item.icon && (\n\t\t\t\t<Icon className=\"list-item-icon text-16 flex-shrink-0\" color=\"action\">\n\t\t\t\t\t{item.icon}\n\t\t\t\t</Icon>\n\t\t\t)}\n\n\t\t\t<ListItemText\n\t\t\t\tclassName=\"list-item-text\"\n\t\t\t\tprimary={item.title}\n\t\t\t\tclasses={{ primary: 'text-14 list-item-text-primary' }}\n\t\t\t/>\n\n\t\t\t{item.badge && <FuseNavBadge badge={item.badge} />}\n\t\t</ListItem>\n\t);\n}\n\nFuseNavVerticalItem.propTypes = {\n\titem: PropTypes.shape({\n\t\tid: PropTypes.string.isRequired,\n\t\ttitle: PropTypes.string,\n\t\ticon: PropTypes.string,\n\t\turl: PropTypes.string\n\t})\n};\n\nFuseNavVerticalItem.defaultProps = {};\n\nconst NavVerticalItem = withRouter(React.memo(FuseNavVerticalItem));\n\nexport default NavVerticalItem;\n"]},"metadata":{},"sourceType":"module"}